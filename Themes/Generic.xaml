<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:shell="http://schemas.microsoft.com/netfx/2009/xaml/presentation"
    xmlns:waml.styles="clr-namespace:WamlDesign.Styles"
    xmlns:waml="clr-namespace:WamlDesign"
    >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/WamlDesign;component/Styles/Waml.Brushes.xaml" />
        <ResourceDictionary Source="/WamlDesign;component/Styles/Waml.Buttons.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <Style TargetType="{x:Type waml:WamlWindow}">
        <Setter Property="Foreground" Value="{StaticResource Neutral.Gray160}"/>
        <Setter Property="FontSize" Value="12"/>

        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome 
                    CaptionHeight="63" 
                    UseAeroCaptionButtons="False"
                    />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type waml:WamlWindow}">
                    <Grid>
                        <Border Background="{StaticResource Neutral.White}" Padding="24, 63, 24, 24">
                            <ContentPresenter Content="{TemplateBinding Content}" />
                        </Border>
                        <TextBlock 
                            Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Title}"   
                            Foreground="{StaticResource Neutral.Gray160}"
                            FontWeight="SemiBold"
                            FontSize="20"
                            VerticalAlignment="Top" HorizontalAlignment="Left"   
                            Margin="24,16,20,46"/>
                        <Image Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Icon}"  
                           VerticalAlignment="Top" HorizontalAlignment="Left"  
                           Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(shell:WindowChrome.WindowChrome).ResizeBorderThickness}"   
                           Width="16"  
                           shell:WindowChrome.IsHitTestVisibleInChrome="True"/>
                        <StackPanel Orientation="Horizontal"
                                    VerticalAlignment="Top" 
                                    HorizontalAlignment="Right"
                                    Margin="15">
                            <waml:WamlChromeButton 
                                x:Name="minimizeButton"
                                Style="{StaticResource WamlButtonStyle}" 
                                shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                Mode="Minimize"
                                Height="32"
                                Width="32"
                                Padding="4"
                                BorderThickness="0">
                                <waml:WamlIcon Icon="ChromeMinimize"/>
                            </waml:WamlChromeButton>
                            <waml:WamlChromeButton 
                                x:Name="maximixedButton"
                                Style="{StaticResource WamlButtonStyle}" 
                                shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                Mode="Maximize"
                                Height="32"
                                Width="32"
                                Padding="4"
                                BorderThickness="0">
                                <waml:WamlIcon Icon="ChromeFullScreen"/>
                            </waml:WamlChromeButton>
                            <waml:WamlChromeButton 
                                x:Name="restoreButton"
                                Style="{StaticResource WamlButtonStyle}" 
                                shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                Mode="Restore"
                                Height="32"
                                Width="32"
                                Padding="4"
                                BorderThickness="0">
                                <waml:WamlIcon Icon="ChromeRestore"/>
                            </waml:WamlChromeButton>
                            <waml:WamlChromeButton 
                                x:Name="closeButton"
                                Style="{StaticResource WamlButtonStyle}" 
                                shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                Mode="Close"
                                Height="32"
                                Width="32"
                                Padding="4"
                                BorderThickness="0">
                                <waml:WamlIcon Icon="ChromeClose"/>
                            </waml:WamlChromeButton>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="Visibility" TargetName="maximixedButton" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter Property="Visibility" TargetName="restoreButton" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="NoResize">
                            <Setter Property="Visibility" TargetName="maximixedButton" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="restoreButton" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="minimizeButton" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="CanMinimize">
                            <Setter Property="Visibility" TargetName="maximixedButton" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="restoreButton" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="minimizeButton" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type waml:WamlSplitButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource WamlFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Neutral.White}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Neutral.Gray110}"/>
        <Setter Property="Foreground" Value="{StaticResource Neutral.Gray160}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="18,5"/>
        <Setter Property="TextElement.FontWeight" Value="SemiBold"/>
        <Setter Property="TextElement.FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type waml:WamlSplitButton}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true" CornerRadius="2">
                        <DockPanel>
                            <Border x:Name="contentPresenter" Background="Transparent">
                                <ContentPresenter Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <StackPanel x:Name="PART_ArrowDown" Orientation="Horizontal" DockPanel.Dock="Right" Visibility="Collapsed" Background="Transparent">
                                <Rectangle Fill="{StaticResource Neutral.Gray80}" Width="1" Margin="0,6,0,6"/>
                                <waml:WamlIcon x:Name="arrowDownIcon" Icon="ChevronDown" Size="12" TextElement.FontWeight="Normal" Foreground="{StaticResource Neutral.Gray160}" Margin="8,4" VerticalAlignment="Center"/>
                            </StackPanel>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ShowSplit" Value="True">
                            <Setter Property="Visibility" TargetName="PART_ArrowDown" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" SourceName="PART_ArrowDown" Value="true">
                            <Setter Property="Background" TargetName="PART_ArrowDown" Value="{StaticResource Neutral.Gray20}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" SourceName="contentPresenter" Value="true">
                            <Setter Property="Background" TargetName="contentPresenter" Value="{StaticResource Neutral.Gray20}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="contentPresenter" Value="{StaticResource Neutral.Gray30}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Neutral.Gray20}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Neutral.Gray20}"/>
                            <Setter Property="TextElement.Foreground" TargetName="border" Value="{StaticResource Neutral.Gray90}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
