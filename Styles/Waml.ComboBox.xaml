<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:waml.styles="clr-namespace:WamlDesign.Styles"
                    xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:waml.converters="clr-namespace:WamlDesign.Converters"
                    xmlns:waml="clr-namespace:WamlDesign">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="./Colors/WamlColor.Blue.xaml"/>
        <ResourceDictionary Source="./Colors/WamlLightThemeColor.xaml"/>
        <ResourceDictionary Source="Waml.Brushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource Primary}" po:Freeze="True"/>

    <waml.converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
    <waml.converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    <waml.converters:NullToBoolConverter x:Key="NullToBoolConverter"/>
    <waml.converters:InverseNullToBoolConverter x:Key="InverseNullToBoolConverter"/>
    <waml.converters:StringEmptyToBoolConverter x:Key="StringEmptyToBoolConverter"/>
    <waml.converters:InverseNullToVisibilityConverter x:Key="InverseNullToVisibilityConverter"/>

    <Style x:Key="WamlComboBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="4,4,21,4" 
                               SnapsToDevicePixels="true" 
                               Stroke="{DynamicResource Palette8}" 
                               StrokeThickness="1"
                               StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Resource dictionary entries should be defined here. -->
    <Style x:Key="WamlComboBoxReadonlyToggleButton" TargetType="ToggleButton">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Bd" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            Background="{TemplateBinding Background}" 
                            CornerRadius="4"
                            SnapsToDevicePixels="true">                        
                        <Border x:Name="Arrow"
                                HorizontalAlignment="Right"
                                Width="32">
                            <waml:WamlIcon Icon="ChevronDown" 
                                           Foreground="{StaticResource PrimaryBrushRegular}"
                                           VerticalAlignment="Center" 
                                           HorizontalAlignment="Center" />
                        </Border>
                    </Border>                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocusWithin" Value="true">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="2"/>
                            <Setter Property="CornerRadius" TargetName="Bd" Value="0.5"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrushRegular}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Neutral.Gray20}"/>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Neutral.Gray20}"/>
                            <Setter Property="Foreground" Value="{StaticResource Neutral.Gray90}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="IsFocused" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource PrimaryBrushDark}"/>
                        </MultiTrigger>                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>
    
    <Style x:Key="WamlComboBoxEditableTextBox" TargetType="TextBox">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" 
                                  Background="Transparent" 
                                  Focusable="false"
                                  HorizontalScrollBarVisibility="Hidden"
                                  VerticalScrollBarVisibility="Hidden"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" 
                Value="Center"/>
    </Style>
    
    <Style x:Key="WamlComboBoxToggleButton" TargetType="ToggleButton">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="bd" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="true">
                        <Grid x:Name="grid" HorizontalAlignment="Right" Width="13">
                            <Border x:Name="bdArrow" Visibility="Hidden" Background="{TemplateBinding BorderBrush}" BorderThickness="1,0,0,0" 
                                    BorderBrush="{DynamicResource Palette6}"/>
                            <Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="{StaticResource Palette11}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>                       
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="IsPressed" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="bdArrow" Value="Visible"/>
                            <Setter Property="Fill" TargetName="Arrow" Value="{DynamicResource Palette6}"/>
                        </MultiTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="bdArrow" Value="Visible"/>
                            <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource Palette10}"/>
                            <Setter Property="Background" TargetName="bdArrow" Value="{StaticResource Palette6}"/>
                            <Setter Property="BorderThickness" TargetName="bdArrow" Value="0"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="bdArrow" Value="Visible"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" TargetName="bdArrow" Value="Visible"/>
                            <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource Palette10}"/>
                            <Setter Property="Background" TargetName="bdArrow" Value="{StaticResource Palette6}"/>
                            <Setter Property="BorderThickness" TargetName="bdArrow" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <ControlTemplate x:Key="WamlComboBoxEditableTemplate" TargetType="ComboBox">
        <Grid x:Name="Placement" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" VerticalOffset="-1">
                <Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Placement}">
                    <Border x:Name="DropDownBorder" BorderBrush="{DynamicResource Palette12}" BorderThickness="1" Margin="1,0,1,0" Background="{DynamicResource Palette13}">
                        <ScrollViewer>
                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </Themes:SystemDropShadowChrome>
            </Popup>
            <Border Grid.ColumnSpan="2" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" />
            <TextBox x:Name="PART_EditableTextBox" 
                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                     IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" 
                     Style="{StaticResource WamlComboBoxEditableTextBox}"/>
            <ToggleButton 
                Grid.Column="1" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                Margin="1" Background="{TemplateBinding Background}" 
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"                           
                Style="{StaticResource WamlComboBoxToggleButton}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                <Setter Property="Background" Value="#FFF4F4F4"/>
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="WamlComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="8,12"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}" 
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Neutral.Gray20}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{StaticResource Neutral.Gray20}"/>
                            <Setter Property="Foreground" Value="{StaticResource Neutral.Gray90}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WamlComboBoxStyle" TargetType="ComboBox">
        <Setter Property="FocusVisualStyle" Value="{StaticResource WamlComboBoxFocusVisual}"/>
        <Setter Property="Foreground" Value="{DynamicResource RegularTextBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{DynamicResource NeutralBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="8,0"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <DockPanel>
                        <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" 
                                    Visibility="{TemplateBinding waml:WamlExtra.Label, Converter={StaticResource NullToVisibilityConverter}}">
                            <TextBlock FontWeight="SemiBold" 
                                       Padding="1,5,0,5" 
                                       Text="{TemplateBinding waml:WamlExtra.Label}"/>
                            <TextBlock Foreground="{StaticResource Shared.SharedRed20}" 
                                       Padding="4,5" 
                                       Text="*" 
                                       Visibility="{TemplateBinding waml:WamlExtra.IsRequired, Converter={StaticResource BoolToVisibilityConverter}}"/>
                        </StackPanel>
                        <Grid x:Name="MainGrid" 
                              SnapsToDevicePixels="true"
                              MinHeight="40">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="32"/>
                            </Grid.ColumnDefinitions>
                            <Popup x:Name="PART_Popup" 
                                   AllowsTransparency="true" 
                                   Grid.ColumnSpan="2" 
                                   Focusable="false" 
                                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                                   Margin="1" 
                                   Placement="Bottom">
                                <Border Background="{StaticResource Neutral.White}"
                                        Effect="{StaticResource Depth8}" 
                                        MinWidth="{Binding ActualWidth, ElementName=MainGrid}"
                                        MaxHeight="{TemplateBinding MaxDropDownHeight}" 
                                        Margin="10,0,10,10" 
                                        CornerRadius="4">
                                    <ScrollViewer CanContentScroll="true">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" 
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                            <ToggleButton Background="{TemplateBinding Background}" 
                                          BorderBrush="{TemplateBinding BorderBrush}" 
                                          Grid.ColumnSpan="2"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Style="{StaticResource WamlComboBoxReadonlyToggleButton}"/>
                            <ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                              Content="{TemplateBinding SelectionBoxItem}" 
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              IsHitTestVisible="false" Margin="{TemplateBinding Padding}" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </DockPanel>
                    <ControlTemplate.Triggers>                       
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            <Setter Property="Background" Value="#FFF4F4F4"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource WamlComboBoxItemStyle}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Template" Value="{StaticResource WamlComboBoxEditableTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
</ResourceDictionary>